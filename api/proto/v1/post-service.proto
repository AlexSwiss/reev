syntax = "proto3";
package v1;

// Post to be added
message Post {
    // Unique integer identifier of the post
    int64 id = 1;
    // Title of the post
    string title = 2;
    // Detail description of the post
    string description = 3;
}

// Request data to create new post
message CreateRequest{
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;

    // post entity to add
    Post post = 2;
}

// Response that contains data for created post
message CreateResponse{
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;

    // ID of created post
    int64 id = 2;
}

// Rquest data to read a post
message ReadRequest{
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;

    // Unique integer identifier of the post task
    int64 id = 2;
}

// Contains post data specified by the ID request
message ReadResponse{
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;

    // Unique integer identifier of the post task
    Post post = 2;
}

// Request data to update a post
message UpdateRequest{
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;

    // Unique integer identifier of the post task
    Post post = 2;
}

// Contains status ofupdate operation
message UpdateResponse{
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;

    // Unique integer identifier of the post task
    int64 updated = 2;
}

// Request data to delete a post
message DeleteRequest{
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;

    // Unique integer identifier of the post task
    int64 id = 2;
}

// contains status of deleted operation
message DeleteResponse{
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;

    // Unique integer identifier of the post 
    int64 deleted = 2;
}

// Request data to read all post
message ReadAllRequest{
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;
}

// Contains list of all post
message ReadAllResponse{
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;

    // List of all post
    repeated Post posts = 2;
}

// Service to manage list of post
service ToDoService {
    // Create new post
    rpc Create(CreateRequest) returns (CreateResponse);

    // Read todo task
    rpc Read(ReadRequest) returns (ReadResponse);

    // Update todo task
    rpc Update(UpdateRequest) returns (UpdateResponse);

    // Delete todo task
    rpc Delete(DeleteRequest) returns (DeleteResponse);

    // Read all todo tasks
    rpc ReadAll(ReadAllRequest) returns (ReadAllResponse);
}